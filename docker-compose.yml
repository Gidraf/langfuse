version: "3.9"

services:
  langfuse-worker:
    image: docker.io/langfuse/langfuse-worker:3
    restart: always
    depends_on:
      clickhouse:
        condition: service_healthy
      redis6380:
        condition: service_healthy
    ports:
      - 127.0.0.1:3030:3030
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment: &langfuse-worker-env
      NEXTAUTH_URL: https://langfuse.cvpap.store

      # === DATABASE (External Postgres) ===
      DATABASE_URL: postgresql://postgres:Winners1127@host.docker.internal:5432/langfuse

      # === Redis (Internal and isolated on port 6380) ===
      REDIS_HOST: redis6380
      REDIS_PORT: 6380
      REDIS_AUTH: "@Winners1127"

      # === MinIO / S3 (External) ===
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_BATCH_EXPORT_ENABLED: true
      LANGFUSE_S3_BATCH_EXPORT_BUCKET: langfuse-export
      LANGFUSE_S3_BATCH_EXPORT_ACCESS_KEY_ID: gidraf
      LANGFUSE_S3_BATCH_EXPORT_SECRET_ACCESS_KEY: Winners1127
      LANGFUSE_S3_BATCH_EXPORT_REGION: us-east-1
      LANGFUSE_S3_BATCH_EXPORT_ENDPOINT: http://5.78.137.59:6500
      LANGFUSE_S3_EVENT_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: gidraf
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: Winners1127
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://5.78.137.59:6500
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: true
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: events/

      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: gidraf
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: Winners1127
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: http://5.78.137.59:6500
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: true
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: media/

      # === Other Langfuse settings ===
      SALT: "84bed3fa1c523c01b40f2525b19304237ab43d9a" # CHANGEME
      ENCRYPTION_KEY: "0000000000000000000000000000000000000000000000000000000000000000" # CHANGEME
      TELEMETRY_ENABLED: ${TELEMETRY_ENABLED:-true}
      LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: ${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-true}

      # ClickHouse (internal container)
      CLICKHOUSE_MIGRATION_URL: clickhouse://clickhouse:9000
      CLICKHOUSE_URL: http://clickhouse:8123
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_CLUSTER_ENABLED: false

  langfuse-web:
    image: docker.io/langfuse/langfuse:3
    restart: always
    depends_on:
      clickhouse:
        condition: service_healthy
      redis6380:
        condition: service_healthy
    ports:
      - 4000:3000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      <<: *langfuse-worker-env
      NEXTAUTH_SECRET: mysecret # CHANGEME

      LANGFUSE_INIT_ORG_ID: ${LANGFUSE_INIT_ORG_ID:-}
      LANGFUSE_INIT_ORG_NAME: ${LANGFUSE_INIT_ORG_NAME:-}
      LANGFUSE_INIT_PROJECT_ID: ${LANGFUSE_INIT_PROJECT_ID:-}
      LANGFUSE_INIT_PROJECT_NAME: ${LANGFUSE_INIT_PROJECT_NAME:-}
      LANGFUSE_INIT_PROJECT_PUBLIC_KEY: ${LANGFUSE_INIT_PROJECT_PUBLIC_KEY:-}
      LANGFUSE_INIT_PROJECT_SECRET_KEY: ${LANGFUSE_INIT_PROJECT_SECRET_KEY:-}
      LANGFUSE_INIT_USER_EMAIL: ${LANGFUSE_INIT_USER_EMAIL:-}
      LANGFUSE_INIT_USER_NAME: ${LANGFUSE_INIT_USER_NAME:-}
      LANGFUSE_INIT_USER_PASSWORD: ${LANGFUSE_INIT_USER_PASSWORD:-}

  clickhouse:
    image: docker.io/clickhouse/clickhouse-server
    restart: always
    user: "101:101"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    volumes:
      - langfuse_clickhouse_data:/var/lib/clickhouse
      - langfuse_clickhouse_logs:/var/log/clickhouse-server
    ports:
      - 127.0.0.1:8123:8123
      - 127.0.0.1:9000:9000
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 1s

  redis6380:
    image: docker.io/redis:7
    container_name: redis6380
    restart: always
    command: >
      redis-server --port 6380 --requirepass ${REDIS_AUTH:-@Winners1127}
    ports:
      - 127.0.0.1:6380:6380
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6380", "-a", "@Winners1127", "ping"]
      interval: 3s
      timeout: 10s
      retries: 10

volumes:
  langfuse_clickhouse_data:
    driver: local
  langfuse_clickhouse_logs:
    driver: local
